.inspectorContainer {
  position: absolute;
  left: 0;
  top: 0;
  width: calc(100% - 16px);
  padding: 8px;
  max-height: 100vh;
  overflow: hidden;
  user-select: none;
  z-index: 200;
}

.dragger {
  width: 8px;
  cursor: ew-resize;
  padding: 4px 0 0;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  z-index: 300;
}

.editor {
  position: absolute;
  right: 0;
  bottom: 0;
  width: 30%;
  height: 600px;
  /* height: 100vh; */
}

.pixicontainer {
  position: absolute;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  z-index: 0;
  background-color: #ffffff;
}

.hide {
  display: none;
}

.nodeTitle {
  text-align: center;
  padding: 16px;
}

.updateTypeSelection {
  margin: 8px 0 8px 0;
  padding: 8px 8px 0px 8px;
  background-color: rgba(255, 255, 255, 0.05);
}

.updateTypeSelectionRow {
  margin: 8px 0 0 0;
}

.intervalFrequency {
  width: 80px;
}

.inputContainer {
  margin: 8px 0 8px 0;
  padding: 8px;
  background-color: rgba(255, 255, 255, 0.05);
}

.inputContainer > *:not(:last-child) {
  margin-bottom: 16px;
}

.outputContainer {
  margin: 8px 0 8px 0;
  padding: 8px;
  background-color: rgba(255, 255, 255, 0.05);
}

.slider {
  width: unset !important;
  margin: 0 16px;
}

.opacity30 {
  opacity: 0.3;
}

.scrollablePortal {
  max-height: 50vh;
  overflow-y: auto;
}

.serializedNode {
  font-size: 12px;
  white-space: pre-wrap;
}

.colorPickerSwatch {
  width: 100%;
  height: 2em;
  line-height: 2em;
  cursor: pointer;
  text-align: center;
  font-size: 1em;
}

.propertyTag {
  cursor: pointer;
  width: 48px;
  text-align: center;
  border-radius: 3px !important;
  margin-right: 8px !important;
}

.brightOnDark {
  background: rgba(138, 155, 168, 0.2);
  color: #bfccd6;
}

.darkOnBright {
  background: #bfccd6;
  color: #182026;
}

.editablePropertyName {
  line-height: 2em;
  padding: 0 16px;
  min-width: 220px;
}

.editablePropertyName2 {
  line-height: 2em;
  padding: 0 16px;
  /* min-width: 220px; */
  background: rgba(41, 55, 66, 1);
  color: #bfccd6;
}

.minMaxInput input {
  width: 64px !important;
}

.textArea {
  max-height: 50vh;
}

.hybridContainer {
  pointer-events: none;
  position: absolute;
  z-index: 0;
  transform-origin: top left;
  overflow: auto;
}

.hybridContainer:focus {
  outline: none;
}

.hybridContainerFocused {
  filter: drop-shadow(0px 0px 24px rgba(0, 0, 0, 0.35));
}

.resizeElement {
  display: flex;
  padding: 10px;
}

.resizeElementLabel {
  display: flex;
  padding: 8px 16px;
}

.resizeHandle {
  background-color: none;
}

.resizeHandle:hover {
  background-color: rgba(225, 84, 125, 0.1);
}

.plugAndPlaygroundIcon {
  position: absolute;
  left: 24px;
  top: 24px;
  filter: drop-shadow(0px 0px 24px rgba(0, 0, 0, 0.15));
  user-select: none;
  border-radius: 32px;
  z-index: 10;
}

.userMenu {
  position: absolute;
  right: 8px;
  top: 4px;
  filter: drop-shadow(0px 0px 24px rgba(0, 0, 0, 0.15));
  z-index: 10;
}

.graphSearch {
  position: absolute;
  left: 96px;
  top: 36px;
  filter: drop-shadow(0px 0px 24px rgba(94, 69, 69, 0.15));
  background: none;
  z-index: 10;
}

.brightPlaceholder input::placeholder {
  color: #f5f5f5;
}

.nodeSearch {
  position: absolute;
  filter: drop-shadow(0px 0px 24px rgba(0, 0, 0, 0.15));
  z-index: 10;
}

.noSelect:focus,
.noSelect > input:focus,
.noSelect > span:focus {
  outline: none !important;
}

.floatingNodeMenu {
  position: absolute;
  transform: translate(-50%, -50%) !important;
  z-index: 100;
}

.floatingSocketInspector {
  position: absolute;
  z-index: 200;
}

.imageIcon {
  display: flex;
  height: inherit;
  width: inherit;
}

.iconRoot {
  text-align: 'center';
}

.propertyContainerContent {
  max-height: 60vh;
  overflow: auto;
}

.snackbarContainerRoot.snackbarContainerRoot.snackbarContainerRoot {
  right: 24px;
  top: 24px;
}
